<?xml version='1.0' encoding='utf-8' ?>
    <Snippets  xmlns='http://schemas.microsoft.com/PowerShell/Snippets'>
        <Snippet Version='1.0.0'>
            <Header>
                <Title>REGISTRE - Chargement des ruches de tous les utilisateurs</Title>
                <Description>Routine de modification des clés de registre pour tous les utilisateurs</Description>
                <Author>Marc-Antoine ROBIN</Author>
                <SnippetTypes>
                    <SnippetType>Expansion</SnippetType>
                </SnippetTypes>
            </Header>

            <Code>
                <Script Language='PowerShell' CaretOffset='0'>
                    <![CDATA[################################## Routine de modification de clés de registre pour tous les profils utilisateurs ##################################
$ProfileExclusion = @('Public','defaultuser0','SVC_PSRepository')
# Chargement des ruches utilisateurs
Get-ChildItem -Path "$env:SystemDrive\Users" -Exclude $ProfileExclusion -Force -Directory |
Where-Object {$_.Attributes -NotMatch 'ReparsePoint'} |
Select-Object -Property Name,FullName |
ForEach-Object {
    $AccountName = $_.Name
    Write-Verbose -Message "AccountName : $AccountName"
    $HiveRoot = "HKEY_USERS\$AccountName"
    
    # Chargement de la ruche utilisateur
    If (Test-Path -Path "$($_.FullName)\NTUser.dat")
    {
        If ($accountName -eq 'Default')
        {
            $IsConnected = $true
            $AccountName = '.DEFAULT'
        }
        Else
        {
            $Return = Invoke-Executable -Command 'reg.exe' -Arguments "load $HiveRoot `"$($_.FullName)\NTUser.dat`"" -WindowStyle Hidden
            If ($Return.ExitCode -eq 0)
            {
                Write-Output "Chargement de la ruche utilisateur pour $AccountName"
                $IsConnected = $false
            }
            Else
            {
                # Si le chargement de la ruche a échoué cela signifie que l'utilisateur est déjà connecté
                $IsConnected = $true
                Write-Output "Utilisateur connecté : $AccountName"
                $AccountName = Get-ChildItem -Path 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList' | 
                                Where-Object {$_.GetValue('ProfileImagePath') -like "*$AccountName"} | 
                                Select-Object -ExpandProperty Name | 
                                Split-Path -Leaf

                Write-Verbose -Message "AccountName : $AccountName"
                Write-Output "SID de l'utilisateur : $AccountName"
            }
        }
			
		########## DEBUT Action sur les clés de registre #################
		ForEach ($Key in @('',''))
		{
			$KeyPath = "Registry::HKEY_USERS\$AccountName\$Key"
			If (Test-Path -Path $KeyPath)
			{
				Remove-Item -Path $KeyPath -Recurse -Force
				Write-Output "Suppression de la clé `"$KeyPath`""
			}
		}
		########## FIN action sur les clés de registre ###################
		
		
        If ($IsConnected -eq $false)
        {
            # Sauvegarde de la ruche pour la décharger à la fin de la suppression des clés
            (Get-Item -Path "Registry::HKEY_USERS\$AccountName").Handle.Close()
            # Suppression des références de pointeurs inutiles dans la mémoire une fois la ruche fermée
            [gc]::Collect()
            $Error.Clear()
            $null = Invoke-Executable -Command 'reg.exe' -Arguments "unload $HiveRoot" -WindowStyle Hidden
            Write-Output "Déchargement de la ruche utilisateur $HiveRoot" 
        }
    }
}
############################# Fin de routine de modification de clés de registre pour tous les profils utilisateurs ################################]]>
                </Script>
            </Code>

    </Snippet>
</Snippets>

